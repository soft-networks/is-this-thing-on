:root {
  --ratio: 1.4;
  --s0: 14px;
  --s1: calc(var(--s0) * var(--ratio));
  --s2: calc(var(--s1) * var(--ratio));
  --s3: calc(var(--s2) * var(--ratio));
  --s4: calc(var(--s3) * var(--ratio));
  --s5: calc(var(--s4) * var(--ratio));
  --s-1: calc(var(--s0) / var(--ratio));
  --s-2: calc(var(--s-1) / var(--ratio));
  --s-3: calc(var(--s-2) / var(--ratio));
  --s-4: calc(var(--s-3) / var(--ratio));
  --s-5: calc(var(--s-4) / var(--ratio));

  --spacing: var(--s0);
  --stackSpacing: var(--s0);

  --gray: rgb(175, 175, 175);
  --light: #ececec;
  --black: rgb(10, 38, 42);
  --white: white;
  --faintWhite: rgba(255, 255, 255, 0.68);
  --contrast: #fcff54;
  --backgroundColor: #f3f3f3;
  --roomColor: white;
  --greenColor: #e2f3de;

  --textWidth: 48ch;

  --stickerSize: 3%;
  --stickerGlowShadow: drop-shadow(0px 0px 5px var(--contrast));
}
@font-face {
  font-family: "Manifont Grotesk";
  src: url("/fonts/ManifontGroteskBook-webfont.woff") format("woff");
}

@font-face {
  font-family: "Manifont Grotesk";
  src: url("/fonts/ManifontGroteskBookItalic-webfont.woff") format("woff");
  font-style: italic;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
#__next,
body {
  width: 100%;
  height: 100%;
}

body {
  font-family: "Manifont Grotesk", monospace;
}

.monospace {
  font-family: monospace;
}

::selection {
  background: var(--contrast);
}

.selected {
  border-color: blue !important;
}
.stroke {
  stroke: black;
  stroke-width: 1px;
}
.stroke.selected {
  stroke: blue;
}
.stroke.clickable:hover {
  stroke: blue;
}

.red {
  background: orangered;
}
.green {
  background: greenyellow;
}

.grow-text {
  font-size: max(min(3.2vw, 56px), 32px);
  word-break: normal;
  letter-spacing: -1px;
  line-height: 1.05;
}
.h1 {
  font-size: max(2.1vw, 24px);
  letter-spacing: -1px;
}
.h3 {
  font-size: var(--s1);
}

a,
a:visited,
.clickable\:link {
  color: var(--black);
  text-decoration: none;
}

.chrisyRoom .addCursor {
  cursor: url(https://i6.cims.nyu.edu/~mr6465/chrisy/add_2.png), auto;
}
.addCursor {
  cursor: crosshair;
}

.typeCursor {
  cursor: text;
}
.closeCursor {
  cursor: alias;
}
.chrisyRoom .moveCursor {
  cursor: url(https://i6.cims.nyu.edu/~mr6465/chrisy/move_2.png), auto;
}

.chrisyRoom .deleteCursor {
  cursor: url(https://i6.cims.nyu.edu/~mr6465/chrisy/delete_2.png), auto;
}
.deleteCursor {
  cursor: not-allowed;
}

.animateTransform {
  transition: transform 1000ms;
}

.draggable {
  cursor: move; /* fallback if grab cursor is unsupported */
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
  border: 1px dotted var(--gray);
  pointer-events: all;
}

.draggable * {
  cursor: inherit;
}

iframe html,
iframe body {
  overflow: hidden !important;
}

/* (Optional) Apply a "closed-hand" cursor during drag operation. */
.draggable.active {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}

.marquee {
  position: relative;
  left: 0%;
  animation: loop-marque 20s linear infinite;
}

@keyframes loop-marque {
  0% {
    left: 0%;
  }
  100% {
    left: 100%;
  }
}

.fadeOut {
  opacity: 1;
  animation: fadeOut forwards 1s;
}
@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* Sizing */
.fullBleed {
  width: 100%;
  height: 100%;
  position: relative;
}

.fullScreen {
  width: 100vw;
  height: 100vh;
  height: calc(var(--vh, 1vh) * 100);
}

.fullHeight {
  height: 100%;
}

.fullWidth {
  width: 100%;
}

.maxFullScreen {
  max-width: 100%;
  max-height: 100%;
}

p {
  max-inline-size: var(--textWidth);
  line-height: 1.2;
}

.inline-block {
  display: inline-block;
}

.wide {
  --textWidth: 100%;
}

.narrow {
  --textWidth: 32ch;
  width: var(--textWidth);
  max-width: 100%;
}

.medium {
  --textWidth: 72ch;
}

.padded {
  padding: var(--spacing);
}

.padded\:s1 {
  padding: var(--s1);
}

.padded\:s2 {
  padding: var(--s2);
}
.padded\:s3 {
  padding-top: var(--s3);
}

.padded\:s-1 {
  padding: var(--s-1);
}
.padded\:s-2 {
  padding: var(--s-2);
}
.padded\:s-3 {
  padding: var(--s-3);
}
.padded\:custom {
  padding: var(--spacing);
}

/* layout */

.relative {
  position: relative;
}

.noOverflow {
  overflow: hidden;
}

.noOverflowX {
  overflow: hidden;
}

.overflowScroll {
  overflow: scroll;
}
.scrollOnHover {
  overflow: hidden;
}
.scrollOnHover:hover {
  overflow: auto;
}
.hide {
  display: none;
}
.showOnHover,
.showOnHoverSelfTrigger {
  /* //animation: blurmyself 0.1s 1s forwards; */
  opacity: 0.5;
  transition: all 300ms;
}

.showOnHoverTrigger:hover .showOnHover,
.showOnHoverSelfTrigger:hover {
  opacity: 1;
}

.overflowVisible {
  overflow: visible;
}

.centerh {
  max-inline-size: var(--textWidth);
  margin-inline: auto;
}

.halfWidth {
  max-inline-size: min(80%, 1200px);
}

.quarterWidth {
  max-inline-size: min(42%, 600px);
}

.cover {
  display: flex;
  flex-direction: column;
  min-block-size: 100%;
}

.cover > .centerv {
  margin-block: auto;
}

.relative {
  position: relative;
}

.absoluteOrigin {
  position: absolute;
  top: 0;
  left: 0;
}

.absoluteEnd {
  position: absolute;
  top: 0;
  right: 0;
  transform: translate(80%, 50%);
}

.absoluteCaption {
  position: absolute;
  bottom: 0;
  right: 0;
  transform: translate(50%, 50%);
}

.center\:children {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.center\:absolute {
  position: absolute;
  top: 50%;
  left: 50%;

  transform: translate(-50%, -50%);
  z-index: -1;
}
.centerh\:absolute {
  position: absolute;
  left: 50%;
  transform: translate(-50%, -0%);
}
.align-end\:absolute {
  bottom: 0;
  top: unset;
}
.align-end\:fixed {
  position: fixed;
  bottom: 0;
  top: unset;
}
.videoLayer {
  z-index: 0;
}
.stickerLayer {
  z-index: 10;
}
.interactiveStickerLayer {
  z-index: 11;
}
.uiLayer,
.uiLayer > * {
  z-index: 500;
}
.highestLayer {
  z-index: 9000;
}
.everest,
.everest * {
  z-index: 99999;
}

.align\:center {
  display: flex;
  justify-content: center;
}
.align-start {
  align-items: flex-start;
}
.align-middle,
.horizontal-stack.align-middle {
  align-items: center;
}
.align-start\:vertical {
  display: flex;
  align-items: flex-start;
}

.center-text {
  text-align: center;
}

.grid,
.grid\:s-1,
.grid\:s-2 {
  display: flex;
  flex-wrap: wrap;
  gap: var(--s0);
  justify-content: center;
}
.grid\:s-1 {
  gap: var(--s-1);
}
.grid\:s-2 {
  gap: var(--s-2);
}

.flex-1 {
  flex: 1;
}

.stack,
.stack\:noGap,
.stack\:s-2,
.stack\:s-1,
.stack\:s1,
.stack\:s2,
.stack\:custom {
  display: flex;
  flex-direction: column;
  --stackSpacing: var(--s0);
}

.inline {
  display: inline-flex;
}

.stack > * + * {
  margin-block-start: var(--s0);
}

.stack\:custom > * + * {
  margin-block-start: var(--stackSpacing);
}

.stack\:noGap > * + * {
  margin-block-start: 0;
}

.stack\:s-1 > * + * {
  margin-block-start: var(--s-1);
}
.stack\:s-2 > * + * {
  margin-block-start: var(--s-2);
}

.stack\:s1 > * + * {
  margin-block-start: var(--s1);
}

.stack\:s2 > * + * {
  margin-block-start: var(--s2);
}

.horizontal-stack,
.horizontal-stack\:s-1,
.horizontal-stack\:s-2,
.horizontal-stack\:noGap {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
}

.horizontal-stack\:noGap > * + * {
  margin-left: 0;
}

.horizontal-stack > * + * {
  margin-left: var(--s0);
}
.horizontal-stack\:s-1 > * + * {
  margin-left: var(--s-1);
}
.horizontal-stack\:s-2 > * + * {
  margin-left: var(--s-2);
}

.stack .align-end {
  margin-top: auto;
}

.stack .justify-end {
  justify-self: flex-end;
}
.stack .align-start {
  align-items: flex-start;
}

.horizontal-stack .align-end {
  margin-left: auto;
}

/* aesthetics + interactivity */

code,
pre {
  line-height: 1.1;
  font-size: inherit;
  font-family: "Share Tech Mono", monospace;
}

.blue {
  color: blue;
}
.border {
  border: 1px solid var(--black);
}
.border-thin {
  border: 1px solid var(--black);
}

.border-bottom {
  border-bottom: 1px solid var(--black);
}

.border-bottom\:thin {
  padding-bottom: var(--s-1);
  border-bottom: 1px dotted var(--black);
}

.border-radius {
  border-radius: var(--s-3);
}

.active a {
  text-decoration: underline;
}

.underline {
  text-decoration: underline;
}
.noUnderline * {
  text-decoration: none;
}

a:hover,
.button:hover {
  color: var(--black);
  cursor: pointer;
}

.noSelect {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.uppercase {
  text-transform: uppercase;
}

.button {
  text-decoration: underline;
  cursor: pointer;
}

.noEvents {
  pointer-events: none;
}

.childEvents * {
  pointer-events: all;
}

.hasEvents {
  pointer-events: all;
}

.containBG {
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.coverBG {
  background-color: var(--light);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.clickHover {
  cursor: pointer;
}

.clickable {
  cursor: pointer;
}
.clickable\:opacity {
  cursor: pointer;
  opacity: 0.8;
  scale: 1;
  transition:
    opacity 100ms,
    scale 100ms;
}
.clickable\:opacity:hover {
  opacity: 1;
  scale: 1.4;
}
.opacity\:hover {
  opacity: 0.3;
}
.opacity\:hover:hover {
  opacity: 1;
}

.scale\:hover {
  scale: 1;
  transition: scale 300ms;
}
.scale\:hover:hover {
  scale: 1.2;
}

.whiteFill {
  background: var(--white);
}
.faintWhiteFill {
  background: var(--faintWhite);
}

.lightFill {
  background: var(--light);
  color: var(--black);
}

.contrastFill.contrastFill\:hover:hover {
  background: yellow !important;
}

.grayFill {
  background: var(--gray);
}
.backgroundFill {
  background: var(--backgroundColor);
}

.blackFill {
  background: var(--black);
}

.contrastFill,
.contrastFill\:hover:hover,
.hoverTrigger:hover .contrastFill\:hover\:triggered {
  background: var(--roomColor);
}

.greenFill,
.greenFill\:hover:hover {
  background: var(--greenColor);
}

.hoverTrigger:hover rect.contrastFill\:hover\:triggered {
  fill: var(--contrast);
}

.hoverTrigger:hover .glow\:hover {
  filter: var(--stickerGlowShadow);
}
.skrimFill {
  background: rgba(0, 0, 0, 0.5);
}

.fadeContrast {
  --fadeFrom: var(--contrast);
  --fadeTo: var(--light);
  animation: 1s fadeColor forwards;
}

@keyframes fadeColor {
  0% {
    background: var(--fadeFrom);
  }
  100% {
    background: var(--fadeTo);
  }
}

.contrastFill::selection {
  background: var(--gray);
}

.caption {
  font-size: calc(0.8 * var(--s0));
}

/* Specific */

.videoAspectContainer {
  overflow: hidden;
  width: 100%;
  height: 100%;
}

.videoAspect {
  width: 100%;
  height: 100%;
}
.videoAspectElement,
.videoAspectElement > .testPlayer {
  height: 100%;
  width: 177.77777778vh; /* 100 * 16 / 9 */
  min-width: 100%;
  min-height: 56.25vw; /* 100 * 9 / 16 */

  position: absolute;
  left: 50%; /* % of surrounding element */
  top: 50%;
  transform: translate(-50%, -50%); /* % of current element */
}

.stream-player > video {
  width: 100%;
  height: 100%;
}

/* .muxPlayer {
  --controls: none;
  background: none;
  --media-object-fit: cover;
  --media-object-position: center;
  --dialog: none;
  --media-background-color: rgba(0,0,0,0.25);
  width: 100%;
  height: 100%;
} */

.videoMob {
  position: absolute;
  inset: 0;
  min-width: 100vw; 
  min-height: 100vh;
  overflow: hidden;
  object-fit: cover;
}

.chat {
  --chatAuthorColor: var(--contrast);
  --chatMessageColor: var(--light);
  --chatContainerBackground: var(--black);
  --chatBorderColor: var(--gray);
  background: var(--chatContainerBackground);
  color: var(--chatMessageColor);
  width: max(35ch, 20vw);
  border-color: var(--chatBorderColor);
  transition: all 100ms;
  position: absolute;
  bottom: 0;
  left: 0;
  padding: var(--s-1);
}
.chatScrollContainer { 
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
  overflow-y: auto;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none;  /* Internet Explorer 10+ */
}

.chatScrollContainer::-webkit-scrollbar { /* WebKit */
  width: 0;
  height: 0;
}


.chat .contrastColor\:hover:hover {
  color: var(--chatAuthorColor);
}
.chatBubble * {
  border-color: var(--chatBorderColor) !important;
}

.handle {
  cursor: all-scroll;
}
::-webkit-scrollbar {
  width: 4px;
  height: 4px;
}

/* Track */
::-webkit-scrollbar-track {
  background: none;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: var(--gray);
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #555;
}

.chatMessage {
  background: var(--chatMessageBackground);
}

.chatMessage .caption {
  color: var(--chatAuthorColor);
}

/* React player */

.player-wrapper {
  width: auto;
  height: auto;
}
.react-player {
  padding-top: 56.25%;
  position: relative;
}

.react-player > div {
  position: absolute;
}

.homeLogoWidth {
  width: 50%;
}

/* footer .homeLogoWidth {
  width: auto;
  height: 96px;
}
footer .stroke {
  stroke-width: 10px;
  filter: drop-shadow( 0px 0px 20px var(--light));
}
footer .clickable {
  background: var(--light);
}
footer .clickable:hover{
  background: var(--contrast);
} */

input,
input::placeholder {
  font-family: "Manifont Grotesk", monospace;
  font: var(--s0);
  border-radius: 0; /* Add this line */
}

input:focus {
  outline: none;
}
@media screen and (min-width: 1300px) {
  .halfWidth {
    max-inline-size: min(80%, 1200px);
  }
}

@media screen and (max-width: 600px) {
  ::root {
    --textWidth: 60vw;
  }

  .homeLogoWidth {
    width: 75%;
  }

  .halfWidth,
  .quarterWidth {
    max-inline-size: 90%;
  }

  .padded\:s1 {
    padding: var(--s0);
  }

  .stack\:s2 > * + * {
    margin-top: var(--s1);
  }

  .mobileHide {
    display: none;
  }

  .center div.dontOverflow {
    max-height: 100%;
    border: none;
  }
  .tarotCardContainer {
    margin-top: var(--s2);
  }
}

/*  put stuff here if you want!  */

/* chia stuff */
.ambience {
  mix-blend-mode: darken;
  opacity: 0.5;
  background: none;
  width: 100%;
  height: 100%;
}

#rotatingEllipseContainer {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  transform: rotate(-30deg);
}
.antiRotate {
  transform: rotate(30deg);
}
.homepageLabel {
  width: 150px;
  height: 32px;
  text-align: center;
  vertical-align: middle;
}
.homepageVideo {
  width: 300px;
  height: 168.75px;
}
.smallElementOnEllipse {
  offset-path: ellipse(18% 15% at center);
  offset-rotate: 0deg;
  vertical-align: middle;
  animation: move 120s infinite linear;
}
.largeElementOnEllipse {
  offset-path: ellipse(30% 35% at center);
  offset-rotate: 0deg;
  animation: move 240s infinite linear;
}

@keyframes move {
  0% {
    offset-distance: var(--animStart);
  }
  100% {
    offset-distance: var(--animEnd);
  }
}

@media screen and (max-width: 768px) {
  #rotatingEllipseContainer {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    transform: rotate(0deg);
  }
  .smallElementOnEllipse {
    offset-path: ellipse(35% 35% at center);
    offset-rotate: 0deg;
    vertical-align: middle;
    animation: move 120s infinite linear;
  }
  .antiRotate {
    transform: rotate(0deg);
  }
  .chat {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    min-height: 100%;
    padding: var(--s-2);
    padding-bottom: 0;
    display: flex;
    flex-direction: column;
  }
  .chat > div:first-child {
    max-height: 100% !important;
    flex-grow: 1;
  }
  .quarterWidth {
    max-inline-size: 100%;
  }
  .hideOnMobile, video {
    display: none;
  }

  .homepageLabel {
   width: 80px;
   height: 48px;
  }

  .chat::before {
    content: '';
    z-index: 10;
    width: 100%;
    height: 100%;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
    background: linear-gradient(0deg, rgba(236, 236, 236, 0.0) 0%, rgba(236, 236, 236, 0.0) 70%, rgba(236, 236, 236, 1) 100%);
  }
  }
@media screen and (min-width: 801px) {
 
}
